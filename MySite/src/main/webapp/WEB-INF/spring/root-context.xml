<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"	
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd	  
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd		     
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<tx:annotation-driven />
	
    <!-- component-scan 설정-->
	<context:component-scan base-package="com.songwoo.mysite">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>  	
	
	<!-- 비동기 처리 -->
	<task:annotation-driven executor="executor" scheduler="scheduler"/>
    <task:executor id="executor" pool-size="50-100" queue-capacity="10"/>
    <task:scheduler id="scheduler" pool-size="3"/>	
	<!--// 비동기 처리 -->	
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:/message/message-common</value>
<!-- 				<value>classpath:/egovframework/rte/fdl/idgnr/messages/idgnr</value> -->
			</list>
		</property>
		<property name="cacheSeconds">
			<value>60</value>
		</property>
	</bean>	
	
	<!-- 환경설정 기본정보를 globals.properties 에서 참조하도록 propertyConfigurer 설정  -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:properties/${SERVER_MODE:local}/jdbc.properties</value>
                <value>classpath:properties/${SERVER_MODE:local}/common.properties</value>                
            </list>
        </property>
    </bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="validationQuery" value="select 1"/>
    </bean>
    
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
<!-- 	<tx:advice id="txAdvice" transaction-manager="txManager"> -->
<!-- 		<tx:attributes> -->
<!-- 			<tx:method name="*" />			 -->
<!-- 		</tx:attributes> -->
<!-- 	</tx:advice> -->

<!-- 	<aop:config> -->
<!-- 		<aop:pointcut id="servicePublicMethod" -->
<!-- 			expression="execution(public * com.skt.o2oband..*Service.*(..))" /> -->
<!-- 		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePublicMethod" /> -->
<!-- 	</aop:config>	 -->
	
		<!-- SqlSession setup for MyBatis Database Layer -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/sqlMap/sql-mapper-config.xml" />
		<property name="mapperLocations" value="classpath:/sqlMap/mappers/*.xml" />
	</bean>

	    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.songwoo.mysite.**.dao" />
    </bean>	
    
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
	    <constructor-arg>
	        <bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
        		<property name="readTimeout" value="10000" />
				<property name="connectTimeout" value="5000" />
	        </bean>
	    </constructor-arg>
	</bean>				
</beans>
